{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vehcile movement\\\\src\\\\components\\\\MapComponent.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Polyline, Marker, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport styles from \"./MapComponent.module.css\";\nimport vehicleIconUrl from 'E:\\Vehcile movement\\public\\assests\\vehicle-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vehicleIcon = new L.Icon({\n  iconUrl: vehicleIconUrl,\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n  popupAnchor: [0, -20]\n});\n\n// Helper function to calculate distance between two lat/lng points in meters\nfunction haversineDistance(lat1, lon1, lat2, lon2) {\n  const toRad = x => x * Math.PI / 180;\n  const R = 6371000; // Earth radius in meters\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nfunction MapComponent() {\n  _s();\n  const [route, setRoute] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [playing, setPlaying] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0); // seconds\n  const [distanceTravelled, setDistanceTravelled] = useState(0); // meters\n  const [speed, setSpeed] = useState(0); // meters per second\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const lastTimestampRef = useRef(null);\n  const lastPositionRef = useRef(null);\n  const progressRef = useRef(0); // progress between currentIndex and next point (0 to 1)\n\n  // Fetch route data\n  useEffect(() => {\n    fetch(\"/dummy-route.json\").then(res => res.json()).then(data => {\n      setRoute(data);\n    });\n  }, []);\n\n  // Reset all states when route changes or playback stops\n  useEffect(() => {\n    if (!playing) {\n      setCurrentIndex(0);\n      setElapsedTime(0);\n      setDistanceTravelled(0);\n      setSpeed(0);\n      progressRef.current = 0;\n      lastTimestampRef.current = null;\n      lastPositionRef.current = null;\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    }\n  }, [playing, route]);\n\n  // Animate vehicle movement smoothly\n  const animate = useCallback(() => {\n    if (!playing || route.length === 0) return;\n    const currentPoint = route[currentIndex];\n    const nextIndex = currentIndex + 1;\n    if (nextIndex >= route.length) {\n      setPlaying(false);\n      return;\n    }\n    const nextPoint = route[nextIndex];\n\n    // Calculate time difference in seconds\n    const currentTime = Date.now();\n    if (!startTimeRef.current) startTimeRef.current = currentTime;\n    const elapsed = (currentTime - startTimeRef.current) / 1000;\n    setElapsedTime(elapsed);\n    const currentTimestamp = new Date(currentPoint.timestamp).getTime();\n    const nextTimestamp = new Date(nextPoint.timestamp).getTime();\n    const totalSegmentTime = (nextTimestamp - currentTimestamp) / 1000;\n    if (totalSegmentTime <= 0) {\n      progressRef.current += 0.01;\n    } else {\n      const segmentElapsed = elapsed - currentIndex * totalSegmentTime;\n      progressRef.current = Math.min(segmentElapsed / totalSegmentTime, 1);\n    }\n    const lat = currentPoint.latitude + (nextPoint.latitude - currentPoint.latitude) * progressRef.current;\n    const lng = currentPoint.longitude + (nextPoint.longitude - currentPoint.longitude) * progressRef.current;\n    if (lastPositionRef.current) {\n      const dist = haversineDistance(lastPositionRef.current[0], lastPositionRef.current[1], lat, lng);\n      setDistanceTravelled(prev => prev + dist);\n      const timeDiff = (currentTime - (lastTimestampRef.current ? new Date(lastTimestampRef.current).getTime() : currentTime)) / 1000;\n      if (timeDiff > 0) {\n        setSpeed(dist / timeDiff);\n      }\n    }\n    lastPositionRef.current = [lat, lng];\n    lastTimestampRef.current = new Date(currentPoint.timestamp).toISOString();\n    if (progressRef.current >= 1) {\n      setCurrentIndex(prev => Math.min(prev + 1, route.length - 1));\n      progressRef.current = 0;\n      startTimeRef.current = Date.now();\n    }\n    animationRef.current = requestAnimationFrame(animate);\n  }, [playing, currentIndex, route]);\n  useEffect(() => {\n    if (playing) {\n      startTimeRef.current = null;\n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    }\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    };\n  }, [playing, animate]);\n  if (route.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading route...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 34\n  }, this);\n  const currentPoint = route[currentIndex];\n  const nextPoint = route[Math.min(currentIndex + 1, route.length - 1)];\n  const lat = currentPoint.latitude + (nextPoint.latitude - currentPoint.latitude) * progressRef.current;\n  const lng = currentPoint.longitude + (nextPoint.longitude - currentPoint.longitude) * progressRef.current;\n  const currentPos = [lat, lng];\n  const pathSoFar = route.slice(0, currentIndex + 1).map(p => [p.latitude, p.longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.header,\n      children: \"\\uD83D\\uDE97 Vehicle Route Simulator (TSX)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapWrapper,\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: currentPos,\n        zoom: 15,\n        scrollWheelZoom: true,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: currentPos,\n          icon: vehicleIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: pathSoFar,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecenterMap, {\n          coords: currentPos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controls,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPlaying(!playing),\n        className: styles.button,\n        children: playing ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPlaying(false);\n          setCurrentIndex(0);\n          setElapsedTime(0);\n          setDistanceTravelled(0);\n          setSpeed(0);\n          progressRef.current = 0;\n          lastTimestampRef.current = null;\n          lastPositionRef.current = null;\n        },\n        className: styles.button,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Coordinates:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 12\n        }, this), \" \", currentPos[0].toFixed(6), \", \", currentPos[1].toFixed(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timestamp:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 12\n        }, this), \" \", route[currentIndex].timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Elapsed Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 12\n        }, this), \" \", Math.floor(elapsedTime), \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distance Travelled:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 12\n        }, this), \" \", distanceTravelled.toFixed(2), \" meters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 12\n        }, this), \" \", speed.toFixed(2), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"4KDwS5ovuGKEbvAI0aHq0BGUBBs=\");\n_c = MapComponent;\nfunction RecenterMap({\n  coords\n}) {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    map.setView(coords);\n  }, [coords]);\n  return null;\n}\n_s2(RecenterMap, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = RecenterMap;\nexport default MapComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"RecenterMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","MapContainer","TileLayer","Polyline","Marker","useMap","L","styles","vehicleIconUrl","jsxDEV","_jsxDEV","vehicleIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","haversineDistance","lat1","lon1","lat2","lon2","toRad","x","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","MapComponent","_s","route","setRoute","currentIndex","setCurrentIndex","playing","setPlaying","elapsedTime","setElapsedTime","distanceTravelled","setDistanceTravelled","speed","setSpeed","animationRef","startTimeRef","lastTimestampRef","lastPositionRef","progressRef","fetch","then","res","json","data","current","cancelAnimationFrame","animate","length","currentPoint","nextIndex","nextPoint","currentTime","Date","now","elapsed","currentTimestamp","timestamp","getTime","nextTimestamp","totalSegmentTime","segmentElapsed","min","lat","latitude","lng","longitude","dist","prev","timeDiff","toISOString","requestAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPos","pathSoFar","slice","map","p","className","container","header","mapWrapper","center","zoom","scrollWheelZoom","style","height","width","url","attribution","position","icon","positions","color","RecenterMap","coords","controls","onClick","button","info","toFixed","floor","_c","_s2","setView","_c2","$RefreshReg$"],"sources":["E:/Vehcile movement/src/components/MapComponent.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Polyline,\r\n  Marker,\r\n  useMap\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport L from \"leaflet\";\r\n\r\nimport styles from \"./MapComponent.module.css\";\r\n\r\ninterface LocationPoint {\r\n  latitude: number;\r\n  longitude: number;\r\n  timestamp: string;\r\n}\r\n\r\nimport vehicleIconUrl from 'E:\\Vehcile movement\\public\\assests\\vehicle-icon.png';\r\n\r\nconst vehicleIcon = new L.Icon({\r\n  iconUrl: vehicleIconUrl,\r\n  iconSize: [40, 40],\r\n  iconAnchor: [20, 20],\r\n  popupAnchor: [0, -20],\r\n});\r\n\r\n// Helper function to calculate distance between two lat/lng points in meters\r\nfunction haversineDistance(lat1: number, lon1: number, lat2: number, lon2: number) {\r\n  const toRad = (x: number) => (x * Math.PI) / 180;\r\n  const R = 6371000; // Earth radius in meters\r\n  const dLat = toRad(lat2 - lat1);\r\n  const dLon = toRad(lon2 - lon1);\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(toRad(lat1)) *\r\n      Math.cos(toRad(lat2)) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  return R * c;\r\n}\r\n\r\nfunction MapComponent() {\r\n  const [route, setRoute] = useState<LocationPoint[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n  const [playing, setPlaying] = useState<boolean>(false);\r\n  const [elapsedTime, setElapsedTime] = useState<number>(0); // seconds\r\n  const [distanceTravelled, setDistanceTravelled] = useState<number>(0); // meters\r\n  const [speed, setSpeed] = useState<number>(0); // meters per second\r\n  const animationRef = useRef<number | null>(null);\r\n  const startTimeRef = useRef<number | null>(null);\r\n  const lastTimestampRef = useRef<string | null>(null);\r\n  const lastPositionRef = useRef<[number, number] | null>(null);\r\n  const progressRef = useRef<number>(0); // progress between currentIndex and next point (0 to 1)\r\n\r\n  // Fetch route data\r\n  useEffect(() => {\r\n    fetch(\"/dummy-route.json\")\r\n      .then((res) => res.json())\r\n      .then((data: LocationPoint[]) => {\r\n        setRoute(data);\r\n      });\r\n  }, []);\r\n\r\n  // Reset all states when route changes or playback stops\r\n  useEffect(() => {\r\n    if (!playing) {\r\n      setCurrentIndex(0);\r\n      setElapsedTime(0);\r\n      setDistanceTravelled(0);\r\n      setSpeed(0);\r\n      progressRef.current = 0;\r\n      lastTimestampRef.current = null;\r\n      lastPositionRef.current = null;\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n    }\r\n  }, [playing, route]);\r\n\r\n  // Animate vehicle movement smoothly\r\n  const animate = useCallback(() => {\r\n    if (!playing || route.length === 0) return;\r\n\r\n    const currentPoint = route[currentIndex];\r\n    const nextIndex = currentIndex + 1;\r\n\r\n    if (nextIndex >= route.length) {\r\n      setPlaying(false);\r\n      return;\r\n    }\r\n\r\n    const nextPoint = route[nextIndex];\r\n\r\n    // Calculate time difference in seconds\r\n    const currentTime = Date.now();\r\n    if (!startTimeRef.current) startTimeRef.current = currentTime;\r\n    const elapsed = (currentTime - startTimeRef.current) / 1000;\r\n    setElapsedTime(elapsed);\r\n\r\n    const currentTimestamp = new Date(currentPoint.timestamp).getTime();\r\n    const nextTimestamp = new Date(nextPoint.timestamp).getTime();\r\n    const totalSegmentTime = (nextTimestamp - currentTimestamp) / 1000;\r\n\r\n    if (totalSegmentTime <= 0) {\r\n      progressRef.current += 0.01;\r\n    } else {\r\n      const segmentElapsed = elapsed - (currentIndex * totalSegmentTime);\r\n      progressRef.current = Math.min(segmentElapsed / totalSegmentTime, 1);\r\n    }\r\n\r\n    const lat = currentPoint.latitude + (nextPoint.latitude - currentPoint.latitude) * progressRef.current;\r\n    const lng = currentPoint.longitude + (nextPoint.longitude - currentPoint.longitude) * progressRef.current;\r\n\r\n    if (lastPositionRef.current) {\r\n      const dist = haversineDistance(lastPositionRef.current[0], lastPositionRef.current[1], lat, lng);\r\n      setDistanceTravelled((prev) => prev + dist);\r\n\r\n      const timeDiff = (currentTime - (lastTimestampRef.current ? new Date(lastTimestampRef.current).getTime() : currentTime)) / 1000;\r\n      if (timeDiff > 0) {\r\n        setSpeed(dist / timeDiff);\r\n      }\r\n    }\r\n\r\n    lastPositionRef.current = [lat, lng];\r\n    lastTimestampRef.current = new Date(currentPoint.timestamp).toISOString();\r\n\r\n    if (progressRef.current >= 1) {\r\n      setCurrentIndex((prev) => Math.min(prev + 1, route.length - 1));\r\n      progressRef.current = 0;\r\n      startTimeRef.current = Date.now();\r\n    }\r\n\r\n    animationRef.current = requestAnimationFrame(animate);\r\n  }, [playing, currentIndex, route]);\r\n\r\n  useEffect(() => {\r\n    if (playing) {\r\n      startTimeRef.current = null;\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    } else {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n    }\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n    };\r\n  }, [playing, animate]);\r\n\r\n  if (route.length === 0) return <p>Loading route...</p>;\r\n\r\n  const currentPoint = route[currentIndex];\r\n  const nextPoint = route[Math.min(currentIndex + 1, route.length - 1)];\r\n  const lat = currentPoint.latitude + (nextPoint.latitude - currentPoint.latitude) * progressRef.current;\r\n  const lng = currentPoint.longitude + (nextPoint.longitude - currentPoint.longitude) * progressRef.current;\r\n  const currentPos: [number, number] = [lat, lng];\r\n\r\n  const pathSoFar: [number, number][] = route\r\n    .slice(0, currentIndex + 1)\r\n    .map((p) => [p.latitude, p.longitude]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.header}>🚗 Vehicle Route Simulator (TSX)</h2>\r\n      <div className={styles.mapWrapper}>\r\n        <MapContainer center={currentPos} zoom={15} scrollWheelZoom={true} style={{ height: \"100%\", width: \"100%\" }}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n          <Marker position={currentPos} icon={vehicleIcon} />\r\n          <Polyline positions={pathSoFar} color=\"blue\" />\r\n          <RecenterMap coords={currentPos} />\r\n        </MapContainer>\r\n      </div>\r\n\r\n      <div className={styles.controls}>\r\n        <button onClick={() => setPlaying(!playing)} className={styles.button}>\r\n          {playing ? \"Pause\" : \"Play\"}\r\n        </button>\r\n        <button onClick={() => {\r\n          setPlaying(false);\r\n          setCurrentIndex(0);\r\n          setElapsedTime(0);\r\n          setDistanceTravelled(0);\r\n          setSpeed(0);\r\n          progressRef.current = 0;\r\n          lastTimestampRef.current = null;\r\n          lastPositionRef.current = null;\r\n        }} className={styles.button}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <div className={styles.info}>\r\n        <p><strong>Current Coordinates:</strong> {currentPos[0].toFixed(6)}, {currentPos[1].toFixed(6)}</p>\r\n        <p><strong>Timestamp:</strong> {route[currentIndex].timestamp}</p>\r\n        <p><strong>Elapsed Time:</strong> {Math.floor(elapsedTime)} seconds</p>\r\n        <p><strong>Distance Travelled:</strong> {distanceTravelled.toFixed(2)} meters</p>\r\n        <p><strong>Speed:</strong> {speed.toFixed(2)} m/s</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RecenterMap({ coords }: { coords: [number, number] }) {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    map.setView(coords);\r\n  }, [coords]);\r\n  return null;\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}